{"version":3,"sources":["styles/GlobalStyles.tsx","styles/theme.tsx","styles/theme-components.tsx","components/TopNavigation/Atoms.tsx","assets/images/i.png","components/TopNavigation/index.tsx","components/Atoms.tsx","components/Home/Header/Atoms.tsx","components/Home/Header/index.tsx","pages/Home.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","reset","sizes","desktop","media","Object","keys","reduce","acc","label","args","css","theme","colors","white","black","fontSizes","secondaryColors","baseStyled","styledComponents","ThemeProvider","default","keyframes","TopNavigationWrapper","styled","div","TopNavigationContainer","Category","ul","SNSLinks","TopNavigation","onClick","alert","src","I_IMAGE","alt","PageLayout","HeaderWrapper","header","HeaderAnimationContents","span","Header","Home","Root","path","component","exact","App","ReactDOM","render","document","getElementById"],"mappings":"8LAwCeA,EArCMC,4BAAH,iyBACZC,KCEAC,EAAmC,CACrCC,QAAS,KASPC,EAAe,CAEjBD,QAAS,cAGbE,OAAOC,KAAKJ,GAAOK,QAAO,SAACC,EAAYC,GACnC,OAAQA,GACJ,IAAK,UACDD,EAAIL,QAAU,sCAAIO,EAAJ,yBAAIA,EAAJ,uBACVC,cADW,MAAD,0JAE+BT,EAAMC,QACrCO,IAOtB,OAAOF,IACRJ,GAEH,I,cAQMQ,EAAQ,CACVC,OATW,CACXC,MAAO,UACPC,MAAO,WAQPC,UAJwB,GAKxBC,gBANoB,GAOpBb,SAKWQ,GADOM,UACPN,G,EC7CXO,EADAC,G,EAHAC,Q,EACAV,I,EACAW,U,EACAF,eCNSG,EAAuBC,UAAOC,IAAV,mUAapBC,EAAyBF,UAAOC,IAAV,8NAWtBE,EAAWH,UAAOI,GAAV,ibAuBRC,EAAWL,UAAOI,GAAV,4aCjDN,MAA0B,8B,OCuD1BE,EA9CiB,WAC5B,OACI,cAACP,EAAD,UACI,eAACG,EAAD,WACI,eAACC,EAAD,WACI,6BACI,mBAAGI,QAAS,kBAAMC,MAAM,aAAxB,SACI,qBAAKC,IAAKC,EAASC,IAAI,WAG/B,6BACI,8CAEJ,6BACI,wCAEJ,6BACI,6CAEJ,6BACI,4CAEJ,6BACI,8CAIR,eAACN,EAAD,WACI,6BACI,yCAEJ,6BACI,uCAEJ,6BACI,wCAEJ,6BACI,8C,eC7CXO,EAAaZ,UAAOC,IAAV,kECAVY,EAAgBb,UAAOc,OAAV,kuBAgCbC,EAA0Bf,UAAOgB,KAAV,8FCNrBC,EAzBU,WACrB,OACI,cAACJ,EAAD,UACI,gCACI,iCACI,qDACuB,uBADvB,sBAIA,iEACoB,gDADpB,MACmD,IAC/C,wDAFJ,uBAGI,qDAHJ,uNAUJ,cAACE,EAAD,UCTDG,EATQ,WACnB,OACI,eAACN,EAAD,WACI,cAAC,EAAD,IACA,8CCSGO,EAZQ,WACnB,OACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWH,EAAMI,OAAK,UCOvCC,EAXO,WAClB,OACI,qCACI,cAAC,EAAD,IACA,cAAC3B,EAAD,CAAeR,MAAOA,EAAtB,SACI,cAAC,EAAD,UCPhBoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.12b25bd4.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset}\n    * {\n        box-sizing: border-box;\n    }\n    html,\n    body {\n        width: 100%;\n        height: 100%;\n    }\n    body {\n        background-color: #ffffff;\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n    a {\n        color: inherit;\n        text-decoration: none;\n        cursor: pointer;\n    }\n    input, button {\n        background-color: transparent;\n        border: none;\n        outline: none;\n    }\n    h1, h2, h3, h4, h5, h6 {\n        font-family: 'Maven Pro', sans-serif;\n    }\n    ol, ul, li {\n        list-style: none;\n    }\n    img {\n        display: block;\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nexport default GlobalStyles;\n","import baseStyled, {\n    css,\n    CSSProp,\n    ThemedStyledInterface,\n} from 'styled-components';\n\nconst sizes: { [key: string]: number } = {\n    desktop: 768,\n};\n\ntype BackQuoteArgs = string[];\n\ninterface Media {\n    desktop: (...args: BackQuoteArgs) => CSSProp | undefined;\n}\n\nconst media: Media = {\n    // eslint-disable-next-line\n    desktop: (...args: BackQuoteArgs) => undefined,\n};\n\nObject.keys(sizes).reduce((acc: Media, label: string) => {\n    switch (label) {\n        case 'desktop':\n            acc.desktop = (...args: BackQuoteArgs) =>\n                css`\n                    @media only screen and (min-width: ${sizes.desktop}px) {\n                        ${args}\n                    }\n                `;\n            break;\n        default:\n            break;\n    }\n    return acc;\n}, media);\n\nconst colors = {\n    white: '#ffffff',\n    black: '#000000',\n};\n\nconst secondaryColors = {};\nconst fontSizes: string[] = [];\n\nconst theme = {\n    colors,\n    fontSizes,\n    secondaryColors,\n    media,\n};\n\nexport type Theme = typeof theme;\nexport const styled = baseStyled as ThemedStyledInterface<Theme>;\nexport default theme;\n","import * as styledComponents from 'styled-components';\n\nimport { Theme } from './theme';\n\nconst {\n    default: styled,\n    css,\n    keyframes,\n    ThemeProvider,\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<Theme>;\n\nexport { css, keyframes, ThemeProvider };\n\nexport default styled;\n","import styled from 'styled-components';\n\nexport const TopNavigationWrapper = styled.div`\n    // TODO: ÏùºÏ†ï Ïä§ÌÅ¨Î°§ Ïù¥ÌõÑ fixedÏôÄ background: white\n    /* position: fixed; */\n    position: absolute;\n    top: 0;\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 56px;\n    padding: 8px 0px;\n    background-color: #ffffff00;\n`;\n\nexport const TopNavigationContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    padding: 0 16px;\n`;\n\nexport const Category = styled.ul`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 660px;\n    width: 100%;\n\n    li {\n        a {\n            color: #ffffff;\n            padding: 16px 0px;\n            img {\n                width: 40px;\n                height: 40px;\n            }\n        }\n        a:hover {\n            color: gray;\n        }\n    }\n`;\n\nexport const SNSLinks = styled.ul`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 300px;\n    width: 100%;\n\n    li {\n        a {\n            color: #ffffff;\n            padding: 4px;\n            img {\n                width: 24px;\n                height: 24px;\n            }\n        }\n        a:hover {\n            color: gray;\n        }\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/i.52978bd8.png\";","import React from 'react';\nimport {\n    TopNavigationWrapper,\n    TopNavigationContainer,\n    Category,\n    SNSLinks,\n} from './Atoms';\nimport I_IMAGE from 'assets/images/i.png';\n\nconst TopNavigation: React.FC = () => {\n    return (\n        <TopNavigationWrapper>\n            <TopNavigationContainer>\n                <Category>\n                    <li>\n                        <a onClick={() => alert(\"It's me!\")}>\n                            <img src={I_IMAGE} alt=\"me\" />\n                        </a>\n                    </li>\n                    <li>\n                        <a>Who xtring?</a>\n                    </li>\n                    <li>\n                        <a>skill</a>\n                    </li>\n                    <li>\n                        <a>Experience</a>\n                    </li>\n                    <li>\n                        <a>Portfolio</a>\n                    </li>\n                    <li>\n                        <a>Interest</a>\n                    </li>\n                </Category>\n\n                <SNSLinks>\n                    <li>\n                        <a>Github</a>\n                    </li>\n                    <li>\n                        <a>Blog</a>\n                    </li>\n                    <li>\n                        <a>Insta</a>\n                    </li>\n                    <li>\n                        <a>FB</a>\n                    </li>\n                </SNSLinks>\n            </TopNavigationContainer>\n        </TopNavigationWrapper>\n    );\n};\n\nexport default TopNavigation;\n","import styled from 'styled-components';\n\nexport const PageLayout = styled.div`\n    width: 100vw;\n    height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.header`\n    width: 100%;\n    height: 660px;\n    background-color: black;\n    overflow-x: hidden;\n\n    div {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 1280px;\n        height: 100%;\n        margin: 0 auto;\n        span {\n            min-width: 48%;\n            padding: 16px;\n            h1 {\n                font-size: 4rem;\n                font-weight: bold;\n                color: #ffffff;\n                line-height: 0.96;\n                margin-bottom: 24px;\n            }\n            p {\n                font-size: 1.5rem;\n                color: #8193b2;\n                line-height: 1.5;\n            }\n        }\n    }\n`;\n\nexport const HeaderAnimationContents = styled.span`\n    width: 48%;\n    height: 460px;\n    background-color: gray;\n`;\n","import React from 'react';\nimport { HeaderWrapper, HeaderAnimationContents } from './Atoms';\n\nconst Header: React.FC = () => {\n    return (\n        <HeaderWrapper>\n            <div>\n                <span>\n                    <h1>\n                        Anywhere you need a<br />\n                        Beautiful UX/UI.\n                    </h1>\n                    <p>\n                        Hi üëãüèª I&#39;m <strong>Hwang Hyun</strong>, a{' '}\n                        <strong>Frontend Developer</strong> who likes to create\n                        <strong>Beautiful UX/UI</strong>. Beautiful UX/UI is\n                        needed for any service and can be entertaining for\n                        anyone. I am always in this thought and worry. We want\n                        to create the best service with the optimal combination\n                        of business and design.\n                    </p>\n                </span>\n                <HeaderAnimationContents></HeaderAnimationContents>\n            </div>\n        </HeaderWrapper>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport { PageLayout } from 'components/Atoms';\nimport Header from 'components/Home/Header';\n\nconst Home: React.FC = () => {\n    return (\n        <PageLayout>\n            <Header />\n            <h1>Contents</h1>\n        </PageLayout>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport TopNavigation from 'components/TopNavigation';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from 'pages/Home';\n\nconst Root: React.FC = () => {\n    return (\n        <Router>\n            <TopNavigation />\n            <Switch>\n                <Route path=\"/\" component={Home} exact />\n                {/* <Route path=\"/benz\" component={Home} exact /> */}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Root;\n","import React from 'react';\nimport GlobalStyles from 'styles/GlobalStyles';\nimport theme from 'styles/theme';\nimport { ThemeProvider } from 'styles/theme-components';\nimport Root from 'routes';\n\nconst App: React.FC = () => {\n    return (\n        <>\n            <GlobalStyles />\n            <ThemeProvider theme={theme}>\n                <Root />\n            </ThemeProvider>\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}